From 3b071179a2efccd4e1c7e5be06f2c4d828934419 Mon Sep 17 00:00:00 2001
From: Palmer Dabbelt <palmer@dabbelt.com>
Date: Wed, 18 Jul 2012 13:14:49 -0400
Subject: [PATCH] Uses NULL instead of nullptr

According to dolphin's bug tracker (linked below) "nullptr" is better
than NULL, but the code seems to build fine and runs the single game I
care about when I just "s/nullptr/NULL/", which is what this patch
does.

http://code.google.com/p/dolphin-emu/issues/detail?id=5538
---
 Source/Core/AudioCommon/Src/XAudio2Stream.cpp  |  2 +-
 Source/Core/AudioCommon/Src/XAudio2Stream.h    |  2 +-
 Source/Core/Common/Src/MemArena.cpp            |  4 ++--
 Source/Core/Common/Src/MemArena.h              |  2 +-
 Source/Core/Core/Src/HW/EXI_DeviceEthernet.cpp |  2 +-
 Source/Core/Core/Src/HW/EXI_DeviceMic.cpp      | 10 +++++-----
 6 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/Source/Core/AudioCommon/Src/XAudio2Stream.cpp b/Source/Core/AudioCommon/Src/XAudio2Stream.cpp
index f60842d..f7148ee 100644
--- a/Source/Core/AudioCommon/Src/XAudio2Stream.cpp
+++ b/Source/Core/AudioCommon/Src/XAudio2Stream.cpp
@@ -181,7 +181,7 @@ void XAudio2::Stop()
 	if (m_mastering_voice)
 	{
 		m_mastering_voice->DestroyVoice();
-		m_mastering_voice = nullptr;
+		m_mastering_voice = NULL;
 	}
 	
 	m_xaudio2.reset();	// release interface
diff --git a/Source/Core/AudioCommon/Src/XAudio2Stream.h b/Source/Core/AudioCommon/Src/XAudio2Stream.h
index 658f73f..1fb896c 100644
--- a/Source/Core/AudioCommon/Src/XAudio2Stream.h
+++ b/Source/Core/AudioCommon/Src/XAudio2Stream.h
@@ -82,7 +82,7 @@ private:
 public:
 	XAudio2(CMixer *mixer) 
 		: SoundStream(mixer)
-		, m_mastering_voice(nullptr)
+		, m_mastering_voice(NULL)
 		, m_volume(1.0f)
 		, m_cleanup_com(SUCCEEDED(CoInitializeEx(NULL, COINIT_MULTITHREADED)))
 	{}
diff --git a/Source/Core/Common/Src/MemArena.cpp b/Source/Core/Common/Src/MemArena.cpp
index 26a332f..47a4aff 100644
--- a/Source/Core/Common/Src/MemArena.cpp
+++ b/Source/Core/Common/Src/MemArena.cpp
@@ -68,13 +68,13 @@ void *MemArena::CreateView(s64 offset, size_t size, void *base)
 	void *retval = mmap(
 		base, size,
 		PROT_READ | PROT_WRITE,
-		MAP_SHARED | ((base == nullptr) ? 0 : MAP_FIXED),
+		MAP_SHARED | ((base == NULL) ? 0 : MAP_FIXED),
 		fd, offset);
 
 	if (retval == MAP_FAILED)
 	{
 		NOTICE_LOG(MEMMAP, "mmap on %s failed", ram_temp_file);
-		return nullptr;
+		return NULL;
 	}
 	else
 	{
diff --git a/Source/Core/Common/Src/MemArena.h b/Source/Core/Common/Src/MemArena.h
index 6951082..3eecddc 100644
--- a/Source/Core/Common/Src/MemArena.h
+++ b/Source/Core/Common/Src/MemArena.h
@@ -33,7 +33,7 @@ class MemArena
 public:
 	void GrabLowMemSpace(size_t size);
 	void ReleaseSpace();
-	void *CreateView(s64 offset, size_t size, void *base = nullptr);
+	void *CreateView(s64 offset, size_t size, void *base = NULL);
 	void ReleaseView(void *view, size_t size);
 
 	// This only finds 1 GB in 32-bit
diff --git a/Source/Core/Core/Src/HW/EXI_DeviceEthernet.cpp b/Source/Core/Core/Src/HW/EXI_DeviceEthernet.cpp
index 4197d01..e48383e 100644
--- a/Source/Core/Core/Src/HW/EXI_DeviceEthernet.cpp
+++ b/Source/Core/Core/Src/HW/EXI_DeviceEthernet.cpp
@@ -51,7 +51,7 @@ void GenerateMAC(MACConsumer type, u8 (&mac)[6])
 		break;
 	}
 
-	srand((unsigned int)time(nullptr));
+	srand((unsigned int)time(NULL));
 
 	u8 id[3] =
 	{
diff --git a/Source/Core/Core/Src/HW/EXI_DeviceMic.cpp b/Source/Core/Core/Src/HW/EXI_DeviceMic.cpp
index f1266d4..7cb866b 100644
--- a/Source/Core/Core/Src/HW/EXI_DeviceMic.cpp
+++ b/Source/Core/Core/Src/HW/EXI_DeviceMic.cpp
@@ -38,12 +38,12 @@ void CEXIMic::StreamLog(const char *msg)
 void CEXIMic::StreamInit()
 {
 	// Setup the wonderful c-interfaced lib...
-	pa_stream = nullptr;
+	pa_stream = NULL;
 
 	if ((pa_error = Pa_Initialize()) != paNoError)
 		StreamLog("Pa_Initialize");
 
-	stream_buffer = nullptr;
+	stream_buffer = NULL;
 	samples_avail = stream_wpos = stream_rpos = 0;
 }
 
@@ -75,7 +75,7 @@ static int Pa_Callback(const void *inputBuffer, void *outputBuffer,
 	s16 *buff_in = (s16 *)inputBuffer;
 	s16 *buff_out = &mic->stream_buffer[mic->stream_wpos];
 
-	if (buff_in == nullptr)
+	if (buff_in == NULL)
 	{
 		for (int i = 0; i < mic->buff_size_samples; i++)
 		{
@@ -118,13 +118,13 @@ void CEXIMic::StreamStart()
 
 void CEXIMic::StreamStop()
 {
-	if (pa_stream != nullptr && Pa_IsStreamActive(pa_stream) >= paNoError)
+	if (pa_stream != NULL && Pa_IsStreamActive(pa_stream) >= paNoError)
 		Pa_AbortStream(pa_stream);
 
 	samples_avail = stream_wpos = stream_rpos = 0;
 
 	delete [] stream_buffer;
-	stream_buffer = nullptr;
+	stream_buffer = NULL;
 }
 
 void CEXIMic::StreamReadOne()
-- 
1.7.12

