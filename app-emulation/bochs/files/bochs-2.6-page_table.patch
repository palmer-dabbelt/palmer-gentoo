diff -ur bochs-2.6.old/gui/enh_dbg.cc bochs-2.6/gui/enh_dbg.cc
--- bochs-2.6.old/gui/enh_dbg.cc	2013-03-09 18:45:47.011649712 -0800
+++ bochs-2.6/gui/enh_dbg.cc	2013-03-09 18:50:13.916951341 -0800
@@ -1606,7 +1606,8 @@
 // lifted from bx_dbg_dump_table in dbg_main of the internal debugger
 void FillPAGE()
 {
-    Bit32u lin, start_lin, curlin; // show only low 32 bit
+    Bit64u lin, start_lin, curlin;
+    const Bit64u maxlin = In64Mode ? 0x0000fffffffff000 : 0xfffff000;
     bx_phy_address phy;
     Bit64u start_phy, phy64;
     int LineCount = 0;
@@ -1618,9 +1619,31 @@
     curlin = lin = 0;   // always start at linear address 0
     start_lin = 1;      // force a mismatch on the first line
     start_phy = 2;
-    while (LineCount < 1024 && curlin != 0xfffff000)
+    while (LineCount < 1024 && curlin < maxlin)
     {
         // get translation lin -> phys, and verify mapping is legal
+
+#if BX_SUPPORT_X86_64
+      if (In64Mode)
+      {
+	Bit64u entry;
+	BX_MEM(0)->readPhysicalPage(BX_CPU_THIS, (BX_CPU_THIS_PTR cr3 & 0x000ffffffffff000) + (lin >> 39) * 8, 8, &entry);
+	if (!(entry & 1))
+	{
+	  curlin = lin;
+	  lin += 1ll << 39;
+	  continue;
+	}
+	BX_MEM(0)->readPhysicalPage(BX_CPU_THIS, (entry & 0x000ffffffffff000) + (lin >> 30 & 511) * 8, 8, &entry);
+	if (!(entry & 1))
+	{
+	  curlin = lin;
+	  lin += 1ll << 30;
+	  continue;
+	}
+      }
+#endif
+
         if (BX_CPU(CurrentCPU)->dbg_xlate_linear2phy(lin, &phy) != FALSE)
         {
             phy64 = phy;
@@ -1628,7 +1651,8 @@
             {
                 if (start_lin != 1)
                 {
-                    sprintf (pa_lin,"0x%08X - 0x%08X",start_lin, lin - 1);
+                    sprintf (pa_lin,"0x" FMT_LLCAPX " - 0x" FMT_LLCAPX,
+			     start_lin, lin - 1);
                     sprintf (pa_phy,"0x" FMT_LLCAPX " - 0x" FMT_LLCAPX,
                         start_phy, start_phy + (lin-1-start_lin));
                     AddPagingLine (LineCount,pa_lin,pa_phy);
@@ -1642,7 +1666,8 @@
         {
             if (start_lin != 1)
             {
-                sprintf (pa_lin,"0x%08X - 0x%08X",start_lin, lin - 1);
+	      sprintf (pa_lin,"0x" FMT_LLCAPX " - 0x" FMT_LLCAPX,
+		       start_lin, lin - 1);
                 sprintf (pa_phy,"0x" FMT_LLCAPX " - 0x" FMT_LLCAPX,
                     start_phy, start_phy + (lin-1-start_lin));
                 AddPagingLine (LineCount,pa_lin,pa_phy);
@@ -1656,7 +1681,7 @@
     }
     if (start_lin != 1)     // need to output one last line?
     {
-        sprintf (pa_lin,"0x%08X - 0x%08X", start_lin, -1);
+      sprintf (pa_lin,"0x" FMT_LLCAPX " - 0x" FMT_LLCAPX,start_lin, -1);
         sprintf (pa_phy,"0x" FMT_LLCAPX " - 0x" FMT_LLCAPX,start_phy, start_phy + (lin-1-start_lin));
         AddPagingLine (LineCount,pa_lin,pa_phy);
     }
